---
# tasks file for roles/sample_app

#---- sample app ----
- name: Rcognize sample-app folder
  ansible.builtin.stat:
    path: /home/ec2-user/raisetech-live8-sample-app
  register: recogzize_sample_app
  changed_when: no
  ignore_errors: yes

- name: Clone raisetech-live8-sample-app
  git:
    repo: https://github.com/yuta-ushijima/raisetech-live8-sample-app.git
    dest: /home/ec2-user/raisetech-live8-sample-app
  ignore_errors: yes
  when: not recogzize_sample_app.stat.exists

#---- database.yml ----
- name: Set up database.yml from templates
  ansible.builtin.template:
    src: roles/sample_app/templates/database.yml.j2
    dest: /home/ec2-user/raisetech-live8-sample-app/config/database.yml
    remote_src: no

#---- bin/setup ----
- name: Rcognize gem sass_rails
  ansible.builtin.shell: 'gem list | grep sass-rails'
  register: recognize_gem_sass_rails
  changed_when: no
  ignore_errors: yes

- name: Output recognize_gem_sass_rails
  ansible.builtin.debug:
    msg: "{{ recognize_gem_sass_rails }}"
  changed_when: no
  ignore_errors: yes

- name: Install related gem packages
  ansible.builtin.shell: 'gem install "{{ item.gem }}"'
  loop:
    - gem: sass-rails
    - gem: date

  when: recognize_gem_sass_rails is failed

- name: Execute bin/setup (need activating AWS RDS for this process)
  ansible.builtin.shell: 'timeout 1800 /home/ec2-user/.anyenv/envs/rbenv/shims/ruby bin/setup'
  args:
    chdir: /home/ec2-user/raisetech-live8-sample-app/
  register: binsetup_result
  when: recognize_gem_sass_rails is failed

- name: Output binsetup_result
  ansible.builtin.debug:
    msg: "{{ binsetup_result }}"
  changed_when: no
  when: binsetup_result is failed

#---- Preparation for bin/dev ----
- name: Set up yarn for bin/dev
  ansible.builtin.shell: '/home/ec2-user/.anyenv/envs/nodenv/shims/yarn install'
  args:
    chdir: /home/ec2-user/raisetech-live8-sample-app/
  register: yarn_result
  when: not binsetup_result is failed

- name: Output yarn install result
  ansible.builtin.debug:
    msg: "{{ yarn_result }}"
  changed_when: no
  ignore_errors: yes
  when: not binsetup_result is failed

- name: Set up Sample app
  ansible.builtin.shell: 'timeout 120 bin/dev'
  args:
    chdir: /home/ec2-user/raisetech-live8-sample-app/
  changed_when: no
  ignore_errors: yes
  when: not binsetup_result is failed

#---- Reboot EC2----
- name: Reboot ec2 instance
  become_user: root
  ansible.builtin.reboot:
    pre_reboot_delay: 0
    post_reboot_delay: 120
